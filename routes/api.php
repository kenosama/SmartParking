<?php

use Illuminate\Http\Request;
use Illuminate\Support\Facades\Route;
use App\Http\Controllers\Auth\RegisteredUserController;
use App\Http\Controllers\Auth\AuthenticatedSessionController;
use App\Http\Controllers\Api\ParkingController;
use App\Http\Controllers\Api\ParkingSpotController;
use App\Http\Controllers\Api\ReservationController;
use App\Http\Controllers\Api\UserController;

/*
|--------------------------------------------------------------------------
| API Routes
|--------------------------------------------------------------------------
|
| Ce fichier d√©finit les points d'entr√©e de l'API de l'application SmartParking.
| Les routes sont divis√©es en sections logiques avec des commentaires explicites.
|
*/

/*
|--------------------------------------------------------------------------
| Routes publiques - Authentification
|--------------------------------------------------------------------------
*/
// Cr√©ation d‚Äôun nouvel utilisateur
Route::post('/register', [RegisteredUserController::class, 'store']);

// Connexion utilisateur (g√©n√®re un token Sanctum)
Route::post('/login', [AuthenticatedSessionController::class, 'store']);

// D√©connexion utilisateur (invalide le token actuel)
Route::post('/logout', [AuthenticatedSessionController::class, 'destroy']);


/*
|--------------------------------------------------------------------------
| Routes prot√©g√©es par Sanctum (n√©cessitent un token)
|--------------------------------------------------------------------------
*/
Route::middleware('auth:sanctum')->group(function () {

    // ‚úÖ R√©cup√®re les infos de l'utilisateur connect√©
    Route::get('/user', function (Request $request) {
        return $request->user();
    });

    /*
    |--------------------------------------------------------------------------
    | Ressources API : Parkings, Parking Spots, R√©servations
    |--------------------------------------------------------------------------
    */
    Route::apiResource('/parkings', ParkingController::class);
    Route::apiResource('/parking-spots', ParkingSpotController::class);
    Route::apiResource('/reservations', ReservationController::class);

    /*
    |--------------------------------------------------------------------------
    | Routes administrateur
    |--------------------------------------------------------------------------
    */
    
    // üîÅ R√©activer un utilisateur (admin uniquement)
    Route::patch('/admin/reactivate-user/{user}', [UserController::class, 'reactivate']);
});
    /*
    |--------------------------------------------------------------------------
    | Routes utilisateur : lecture, mise √† jour, d√©sactivation, r√©activation
    |--------------------------------------------------------------------------
    */

    // üìÑ Lire les d√©tails d‚Äôun utilisateur sp√©cifique
    Route::get('/user/{user}', [UserController::class, 'show']);

    // ‚úèÔ∏è Mettre √† jour un utilisateur (par lui-m√™me ou par un admin)
    Route::put('/user/{user}', [UserController::class, 'update']);

    // üóëÔ∏è D√©sactiver (soft delete) un utilisateur (par lui-m√™me ou par un admin)
    Route::delete('/user/{user}', [UserController::class, 'destroy']);



/*
|--------------------------------------------------------------------------
| Exemple de versionnement de l‚ÄôAPI (v1)
|--------------------------------------------------------------------------
|
| Pour activer, d√©commentez et placez les routes √† l'int√©rieur du groupe.
|
*/

// Route::prefix('v1')->group(function () {
//     // Exemples de routes versionn√©es
//     // Route::apiResource('/parkings', ParkingController::class);
//     // Route::apiResource('/parking-spots', ParkingSpotController::class);
//     // Route::apiResource('/reservations', ReservationController::class);
// });